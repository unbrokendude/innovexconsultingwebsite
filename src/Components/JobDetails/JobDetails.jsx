import React, { useState } from 'react';
import { useParams } from 'react-router-dom';
import './JobDetails.css'; // Ensure this file exists for styling
import { formatDistanceToNow } from 'date-fns';
import { fr } from 'date-fns/locale';
import emailjs from 'emailjs-com';

const jobListings = [
    {
        id: 1,
        title: "Stagiaire Consultant(e) SAP HR (H/F)",
        offre: "recrute pour le compte de sa filiale BlueTalent bas√©e √† Rabat.",
        offreDetails : "Innovex consulting est une startup fran√ßaise fond√©e en 2023 par des experts sp√©cialis√©s dans le domaine des SIRH, avec un focus particulier sur l‚Äôoutil SAP HR. Chez Innovex consulting, nous nous engageons √† fournir √† nos clients des solutions innovantes et sur mesure pour r√©pondre √† leurs besoins en mati√®re de gestion des ressources humaines.",
        description: "Nous recrutons un(e) stagiaire, rattach√©(e) √† l‚Äôagence de Rabat qui aura l‚Äôopportunit√© d‚Äôintervenir sur des projets d‚Äôaccompagnement de nos clients sur leur syst√®me d‚Äôinformation RH (SIRH). Vous serez impliqu√©(e) dans l‚Äôoptimisation de la performance et des processus, et dans le d√©ploiement et la maintenance de solutions. Accompagn√©(e) par un consultant exp√©riment√©, vous pourrez √™tre amen√©(e) √† intervenir sur diff√©rents types de missions et ainsi √† exercer des activit√©s tr√®s diverses :",
        tasks: {
            moe: [
                "Assistance √† l‚Äôanimation d‚Äôateliers de conception sur les processus RH",
                "Assistance √† la r√©daction des sp√©cifications fonctionnelles",
                "Param√©trage de la solution et tests de ces param√©trages",
                "Livraison au client",
                "Analyse et correction des incidents"
            ],
            amoa: [
                "Recueil et compr√©hension des besoins du client",
                "Assistance √† la pr√©paration / animation d‚Äôateliers RH",
                "Assistance √† la conception et r√©alisation de la recette fonctionnelle",
                "Cr√©ation des supports de formation et guides utilisateurs",
                "Assistance et support fonctionnel"
            ]
        },
        criteres: [
            "Dipl√¥m√© (Bac+5) en informatique ou en derni√®re ann√©e de master ou du cycle d'ing√©nieur en informatique.",
            "Capacit√© √† travailler en √©quipe et en autonomie.",
            "Bon niveau en anglais."
        ],
        location: "Rabat",
        category: "Stage",
        date: new Date('2024-08-22T09:00:00'),
        avantages: [
            "Formation et encadrement par des professionnels exp√©riment√©s.",
            "Opportunit√© d'acqu√©rir une exp√©rience significative.",
            "Gratification de stage",
            "Possibilit√© de travail √† distance jusqu‚Äô√† 2 jours/semaine"
        ]
    }
];

const JobDetails = () => {
    const { id } = useParams();
    const job = jobListings.find(job => job.id.toString() === id);
    const [result, setResult] = useState("");

    const onSubmit = async (event) => {
        event.preventDefault();
        setResult("Envoi du formulaire en cours...");
    
        try {
            const formData = new FormData(event.target);
    
            const response = await fetch('http://localhost:3000/submit-form', {
                method: 'POST',
                body: formData
            });
    
            if (response.ok) {
                setResult("Formulaire soumis avec succ√®s");
                event.target.reset();
            } else {
                const errorData = await response.text(); // Get the response body if not ok
                console.error('Response Error:', errorData);
                setResult("Error: " + response.statusText);
            }
        } catch (error) {
            console.error('Error:', error);
            setResult(`Error: ${error.message}`);
        }
    };
    
    if (!job) {
        return <div>Job not found</div>;
    }

    return (
        <div className="job-detail">
            <h1>{job.title}</h1>
            <div className="job-info">
                <span className="job-location">üìç {job.location}</span>
                <span className="job-date">üìÖ Publi√© {formatDistanceToNow(new Date(job.date), { addSuffix: true, locale: fr })}</span>
            </div>
            <p><strong>Innovex Consulting</strong> {job.offre}</p>
            <p>{job.offreDetails}</p>
            <h2>Description du poste</h2>
            <p>{job.description}</p>
            <h3>Missions de maitrise d‚Äô≈ìuvre (MOE)</h3>
            <ul>
                {job.tasks.moe.map((task, index) => (
                    <li key={index}>{task}</li>
                ))}
            </ul>
            <h3>Missions d‚Äôassistance √† ma√Ætrise d‚Äôouvrage (AMOA)</h3>
            <ul>
                {job.tasks.amoa.map((task, index) => (
                    <li key={index}>{task}</li>
                ))}
            </ul>
            <h2>Profil recherch√©</h2>
            <ul>
                {job.criteres.map((criteres, index) => (
                    <li key={index}>{criteres}</li>
                ))}
            </ul>
            <h2>Avantages</h2>
            <ul>
                {job.avantages.map((avantages, index) => (
                    <li key={index}>{avantages}</li>
                ))}
            </ul>
            <h2>Postuler en ligne</h2>
            <form onSubmit={onSubmit} method="POST" encType="multipart/form-data">
            <div>
                <label>Nom*</label>
                <input type="text" placeholder="Entrez votre nom" name="lastName" required />
            </div>
            <div>
                <label>Pr√©nom*</label>
                <input type="text" placeholder="Entrez votre pr√©nom" name="firstName" required />
            </div>
            <div>
                <label>Email*</label>
                <input type="email" placeholder="Entrez votre email" name="email" required />
            </div>
            <div>
                <label>T√©l√©phone*</label>
                <input type="tel" placeholder="Entrez votre num√©ro de t√©l√©phone" name="phone" required />
            </div>
            <div>
                <label>CV*</label>
                <input type="file" name="cv" required />
            </div>
            <input type="hidden" name="jobTitle" value={job.title} />
            <button type="submit">Envoyer<i className="fas fa-paper-plane"></i></button>
            </form>


            <p>{result}</p>
        </div>
    );
};

export default JobDetails;
